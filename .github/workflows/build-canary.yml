name: Publish Canary

on:
  push:
    branches:
      - main
    paths:
      - 'application/**'
      - '.github/workflows/**'

jobs:
  publish-canary:
    name: Build & Publish for ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: ubuntu-22.04
            args: ""
          - platform: windows-latest
            args: ""

    steps:
      - uses: actions/checkout@v4

      # -----------------------
      # Node.js + PNPM
      # -----------------------
      - name: Set up Node.js & install pnpm
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - run: npm install -g pnpm

      - name: Cache PNPM dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pnpm-store
            application/node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('application/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install frontend dependencies
        working-directory: application/
        run: pnpm install

      # -----------------------
      # Rust + sccache
      # -----------------------
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install sccache
        run: cargo install sccache

      - name: Set RUSTC_WRAPPER
        run: echo "RUSTC_WRAPPER=$(which sccache)" >> $GITHUB_ENV

      - name: Cache Cargo registry & git
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('application/src-tauri/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache Rust target
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './application/src-tauri -> ./application/target'
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('application/src-tauri/Cargo.lock') }}

      # -----------------------
      # Linux build dependencies
      # -----------------------
      - name: Install Linux build dependencies
        if: startsWith(matrix.platform, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf

      # -----------------------
      # Build & Publish Tauri
      # -----------------------
      - name: Build & Publish Canary Release
        uses: tauri-apps/tauri-action@v0
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          GITHUB_TOKEN: ${{ secrets.PUBLIC_REPO_TOKEN }}
          GITHUB_REPOSITORY: ModpackStore/ModpackStore-Releases
        with:
          projectPath: ./application
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          includeUpdaterJson: true
          args: ${{ matrix.args }}
          owner: ModpackStore
          repo: ModpackStore-Releases
